name: Deploy da aplicação

on: 
  pull_request:
    types: [labeled]

jobs:
  deploy:
    if: contains( github.event.label.name, 'deploy dev')
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
        
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ secrets.GH_PACKAGES_TOKEN }}"
          target_url: https://demogithubday.azurewebsites.net/
          environment: desenvolvimento
          ref: ${{ steps.extract_branch.outputs.branch }}
        
      - uses: azure/webapps-deploy@v2
        with:
          app-name: 'demogithubdayoi'
          publish-profile: ${{ secrets.azureWebAppPublishProfile }}
          images: 'ghcr.io/julioarruda/demogithubday:latest'
          
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ secrets.GH_PACKAGES_TOKEN }}"
          target_url: https://demogithubday.azurewebsites.net/
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          ref: ${{ steps.extract_branch.outputs.branch }}
          
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ secrets.GH_PACKAGES_TOKEN }}"
          target_url: https://demogithubday.azurewebsites.net/
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          ref: ${{ steps.extract_branch.outputs.branch }}
